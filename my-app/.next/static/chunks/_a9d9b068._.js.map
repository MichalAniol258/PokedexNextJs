{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ramia/Documents/Projekty/PokedexNextJs/my-app/src/app/pokemons/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'next/navigation'; // Use useParams instead of useRouter\nimport { HistoryElem, PokemonDetection } from \"@/types/history\";\nimport { createClient } from \"@/utils/supabase/client\";\nimport Image from 'next/image';\n// Initialize the Supabase client (use your actual Supabase URL and key here)\n\nconst Page = () => {\n    const { id } = useParams(); // Get the 'id' from the URL parameters using useParams()\n    const supabase = createClient()\n    const [pokemon, setPokemon] = useState<HistoryElem | null>(null); // State to hold the pokemon data\n    const [loading, setLoading] = useState(true); // State to track loading status\n    const [error, setError] = useState<string | null>(null); // State to track errors\n\n    useEffect(() => {\n        // Ensure that the ID is available before making the request\n        if (!id) return;\n\n        // Fetch the pokemon data from Supabase using the 'id'\n        const fetchPokemon = async () => {\n            try {\n                const { data: { user } } = await supabase.auth.getUser();\n                if (!user) {\n                    setLoading(false)\n                    return;\n                }\n                setLoading(true);\n                const { data, error } = await supabase\n                    .from('pokemons')\n                    .select('*')\n                    .eq('id', id)\n                    .single(); // We expect a single result\n                if (!data) setError(\"Not Found\")\n                if (data?.user_id !== user?.id) setError(\"Not Found\")\n                if (error) {\n                    throw error;\n                }\n                setPokemon({ ...data, body: JSON.parse(data.body), url: `https://mkttmsharlpupjggoayx.supabase.co/storage/v1/object/public/photos/${data.url}` }); // Set the data to state\n            } catch (err: any) {\n                setError(err.message); // Set error message\n            } finally {\n                setLoading(false); // Set loading to false after the request is done\n            }\n        };\n\n        fetchPokemon(); // Call the fetch function\n    }, [id]); // Re-run the effect when the 'id' changes\n\n    // Render the loading, error, or data\n    if (loading) return <div className=\"fixed h-screen w-full left-[0] top-[0] !bg-[#181b1d] z-[10000]\">\n        <Image src={'/loading.gif'} className=\"fixed left-[0] top-[0] object-contain w-full h-screen z-[1999]\" height={50} width={50} alt=\"\" />\n    </div>;\n    if (error) return <div>Error: {error}</div>;\n\n    const item = pokemon?.body;\n    return (\n        <div className=\"flex bg-violet-950\">\n            {pokemon ? (\n                <>\n                    <div className=\"w-1/2  relative\">\n                        <img\n                            src={pokemon.url}\n                            alt=\"Uploaded Preview\"\n                            className=\"w-full h-full object-cover\"\n                        />\n                    </div>\n                    <div className=\"w-1/2 text-violet-200 p-4 flex flex-col justify-center items-right !p-[100px]\">\n                        {item && (\n                            <>\n                                <h2 className=\"text-2xl text-right\"><strong>{item.name} detected!</strong></h2>\n                                <p className=\"text-right !text-violet-300\"> {item.description}</p>\n                                <p className=\"text-right !text-violet-300\"><strong className='text-violet-200'>Pokedex number:</strong> {item.pokedex_code}</p>\n                                <p className=\"text-right !text-violet-300\"><strong className='text-violet-200'>Type:</strong> {item.type}</p>\n                                {item.weakness && (\n                                    <>\n                                        <h3 className=\"text-center !text-violet-200\">Weakness:</h3>\n                                        <div className=\"flex justify-center flex-wrap\">\n                                            {item.weakness.map((weakness: string, index: number) => (\n                                                <span key={index} className=\"inline-block bg-violet-300 text-gray-950 rounded-full py-1 px-3 m-1 text-sm capitalize  \">\n                                                    {weakness}\n                                                </span>\n                                            ))}\n                                        </div>\n                                    </>\n                                )}\n                                {item.properties && (\n                                    <div style={{ marginTop: '10px' }}>\n                                        {Object.entries(item.properties).map(([key, value], i) => (\n                                            <div key={i}>\n                                                {value && (\n                                                    <div className=\"flex justify-between border-b !border-violet-300 py-1\">\n\n                                                        <span className='font-semibold'>{key}:</span>\n                                                        {typeof value === 'string' ? <span className=''>{value}</span> : ''}\n                                                    </div>\n                                                )}\n                                            </div>\n                                        ))}\n                                    </div>\n                                )}\n                            </>\n                        )}\n                    </div>\n                </>\n            ) : (\n                <div>No Pok√©mon found</div>\n            )}\n        </div>\n\n\n    );\n};\n\nexport default Page;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ramia/Documents/Projekty/PokedexNextJs/my-app/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}